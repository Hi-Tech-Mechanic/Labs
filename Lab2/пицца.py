class Пицца:
    """Класс Пицца содержит общие атрибуты для пиццы.

    Дочерние классы будут их конкретизировать.
    """

    def __init__(self):
        """Конструктор класса.

        Инициализирует атрибуты пиццы (значения по умолчанию).
        """
        self.название = "Заготовка"
        self.тесто = "тонкое"  # тонкое или пышное
        self.соус = "кечтуп"   # или другой
        self.начинка = []      # список начинок (по умолчанию - нет)

        self.цена = 0

    def __str__(self):
        """Вернуть информацию о пицце: название, тесто, соус, начинка.

        Формат вывода:

        Пицца: Пепперони | Цена: 350.00 р.
        Тесто: тонкое Соус: томатный
        Начинка: пепперони, сыр моцарелла
        """
        return(f"Пицца: {self.название} | Цена: {self.цена} р.\n"
              f"Тесто: {self.тесто} Соус: {self.соус}\n"
              f"Начинка: {[element for element in self.начинка]}")

    def подготовить(self):
        """Сообщить о процессе подготовки.

        Формат вывода:

        Начинаю готовить пиццу Пепперони
          - замешиваю тонкое тесто...
          - добавляю соус: томатный...
          - и, конечно: пепперони, сыр моцарелла...
        """
        print(f"Начинаю готовить пиццу {self.название}\n"
              f"- замешиваю {self.тесто}\n"
              f"- добавляю соус: {self.соус}")
        print("- и, конечно:", end = " ")
        for element in self.начинка:
            print (element, end=" ")

    def испечь():
        """Сообщить о процессе запекания пиццы.

        Формат вывода: произвольное сообщение.
        """
        print("\nПроисходит запекание")

    def нарезать():
        """Сообщить о процессе нарезки.

        Формат вывода: произвольное сообщение.
        """
        print("Происходит нарезка")

    def упаковать():
        """Сообщить о процессе упаковки.

        Формат вывода: произвольное сообщение.
        """
        print("Происходит упаковка")


class ПиццаПепперони(Пицца):
    """Класс ПиццаПепперони дополняет класс Пицца."""

    def __init__(self):
        self.тесто = "тонкое"
        self.название = "Пепперони"
        self.начинка = ["пепперони", "сыр", "моцарелла"]
        self.соус = "томатный"
        self.цена = 350


class ПиццаБарбекю(Пицца):
    """Класс ПиццаБарбекю дополняет класс Пицца."""

    def __init__(self):
        self.тесто = "тонкое"
        self.название = "Барбекю"
        self.начинка = ["бекон", "ветчина", "зелень", "сыр", "моцарелла"]
        self.соус = "барбекю"
        self.цена = 450


class ПиццаДарыМоря(Пицца):
    """Класс ПиццаДарыМоря дополняет класс Пицца."""

    def __init__(self):
        self.название = "Дары моря"
        self.тесто = "Пышное"
        self.начинка = ["кальмары", "креветки", "мидии", "сыр", "моцарелла"]
        self.соус = "тар-тар"
        self.цена = 550